{"version":3,"sources":["App.js","serviceWorker.js","store.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","leftTextWidth","rightTextWidth","textAndImageStage","backgroundStage","index","activeTransition","leftSpanRef","createRef","rightSpanRef","_this2","setState","current","clientWidth","setInterval","prevProps","prevState","_this3","setTimeout","sneakers","_this$state","_this$props$sneakers$","backgroundColor","leftText","rightText","imageUrl","sku","release","nickname","leftSpanEnter","right","concat","leftSpanExit","rightSpanEnter","left","rightSpanExit","nextIndex","react_default","a","createElement","className","style","alt","src","ref","Component","connect","objectSpread","Boolean","window","location","hostname","match","initialState","store","createStore","arguments","length","undefined","type","applyMiddleware","createLogger","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ae9cb43e.chunk.js","sourcesContent":["import React, { Component, createRef } from 'react'\nimport './App.css'\nimport { connect } from 'react-redux'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      leftTextWidth: '0',\n      rightTextWidth: '0',\n      textAndImageStage: 'exit',\n      backgroundStage: 'exit',\n      index: 0,\n      activeTransition: false,\n    }\n    \n    this.leftSpanRef = createRef()\n    this.rightSpanRef = createRef()\n  }\n\n  componentDidMount() {\n    this.setState({ textAndImageStage: 'enter' })\n\n    this.setState({\n      leftTextWidth: this.leftSpanRef.current.clientWidth,\n      rightTextWidth: this.rightSpanRef.current.clientWidth,\n    })\n\n    setInterval(() => {\n      this.setState({\n        textAndImageStage: 'exit',\n        backgroundStage: 'enter',\n        activeTransition: true\n      })\n    },4200)\n  }\n\n  componentDidUpdate(prevProps,prevState) {\n    if (this.state.textAndImageStage === 'exit') {\n      setTimeout(() => {\n        this.setState({\n          textAndImageStage: 'enter',\n          backgroundStage: 'exit',\n          index: this.props.sneakers[prevState.index + 1] ? prevState.index += 1 : 0,\n        })\n      },1100)\n\n      setTimeout(() => {\n        this.setState({ activeTransition: false })\n      },2100)\n    }\n    if (this.state.index !== prevState.index) {\n      this.setState({\n        leftTextWidth: this.leftSpanRef.current.clientWidth,\n        rightTextWidth: this.rightSpanRef.current.clientWidth,\n      })\n    }\n  }\n\n  render() {\n    const { leftTextWidth, rightTextWidth, textAndImageStage, backgroundStage } = this.state\n    const { backgroundColor, leftText, rightText, imageUrl, sku, release, nickname } = this.props.sneakers[this.state.index]\n    let leftSpanEnter = { right: `calc(50% - ${leftTextWidth / 2}px` }\n    let leftSpanExit = { right: `-${leftTextWidth + 25}px` }\n    let rightSpanEnter = { left: `calc(50% - ${rightTextWidth / 2}px)` }\n    let rightSpanExit = { left: `-${rightTextWidth + 25}px` }\n    let nextIndex = this.props.sneakers[this.state.index + 1] ? this.state.index + 1 : 0\n    return (\n      <div className='App'>\n        <div className='main' style={{backgroundColor}}> \n          <img className={`image ${textAndImageStage === 'enter' && 'enter'}`} alt='' src={`${imageUrl}`} />\n          <div className={`background ${backgroundStage === 'enter' && 'enter'}`}\n            style={ backgroundStage === 'enter' ? \n              { backgroundColor: this.props.sneakers[nextIndex].backgroundColor} : {}\n          }/>\n          <div className='left-text'>\n            <span \n            style={textAndImageStage === 'exit' ? leftSpanExit : leftSpanEnter}\n            ref={this.leftSpanRef}>\n                {leftText}\n              </span>\n            </div>\n            <div className='right-text'>\n            <span \n            style={textAndImageStage === 'exit' ? rightSpanExit : rightSpanEnter} \n            ref={this.rightSpanRef}>\n                {rightText}\n              </span>\n            </div>\n        </div>\n        <div className='bottom'>\n          <div className='detail'>\n            <div><span className={textAndImageStage === 'enter' && 'enter'}>{sku}</span></div>\n            <div>SKU</div>\n          </div>\n          <div className='detail'>\n            <div><span className={textAndImageStage === 'enter' && 'enter'}>{nickname}</span></div>\n            <div>NICKNAME</div>\n          </div>\n          <div className='detail'>\n            <div><span className={textAndImageStage === 'enter' && 'enter'}>{release}</span></div>\n            <div>RELEASE</div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapState = state => ({ ...state })\n\nexport default connect(mapState,null)(App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore,applyMiddleware } from 'redux'\nimport { createLogger } from 'redux-logger'\n\nconst initialState = {\n  sneakers: [\n    {\n      leftText: 'Yeezy',\n      rightText: '700',\n      imageUrl: './yeezy-700.png',\n      backgroundColor: '#fe703a',\n      release: '2017',\n      nickname: 'Wave Runner',\n      sku: 'B75571'\n    },\n    {\n      leftText: 'Jordan',\n      rightText: 'Off-White',\n      imageUrl: './jordan-1.png',\n      backgroundColor: '#ed1b23',\n      release: '2017',\n      nickname: 'Off-White',\n      sku: 'AA3834 101'\n    },\n    {\n      leftText: 'Nike',\n      rightText: 'Adapt',\n      imageUrl: './nike-adapt.png',\n      backgroundColor: '#7b7e80', \n      release: '2019',\n      nickname: 'Self-lacing',\n      sku: 'AO2582 001'\n    }\n  ]\n}\n\nconst reducer = (state = initialState, action) => {\n  switch(action.type) {\n    default:\n      return state\n  }\n}\n\nconst store = createStore(reducer,applyMiddleware(createLogger()))\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}